// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.3.0
// - protoc             v3.19.4
// source: account.proto

package pb

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

const (
	AccountValidateService_AccountValidate_FullMethodName = "/account.AccountValidateService/AccountValidate"
)

// AccountValidateServiceClient is the client API for AccountValidateService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type AccountValidateServiceClient interface {
	AccountValidate(ctx context.Context, in *AccountValidateReq, opts ...grpc.CallOption) (*AccountValidateResp, error)
}

type accountValidateServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewAccountValidateServiceClient(cc grpc.ClientConnInterface) AccountValidateServiceClient {
	return &accountValidateServiceClient{cc}
}

func (c *accountValidateServiceClient) AccountValidate(ctx context.Context, in *AccountValidateReq, opts ...grpc.CallOption) (*AccountValidateResp, error) {
	out := new(AccountValidateResp)
	err := c.cc.Invoke(ctx, AccountValidateService_AccountValidate_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AccountValidateServiceServer is the server API for AccountValidateService service.
// All implementations should embed UnimplementedAccountValidateServiceServer
// for forward compatibility
type AccountValidateServiceServer interface {
	AccountValidate(context.Context, *AccountValidateReq) (*AccountValidateResp, error)
}

// UnimplementedAccountValidateServiceServer should be embedded to have forward compatible implementations.
type UnimplementedAccountValidateServiceServer struct {
}

func (UnimplementedAccountValidateServiceServer) AccountValidate(context.Context, *AccountValidateReq) (*AccountValidateResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AccountValidate not implemented")
}

// UnsafeAccountValidateServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to AccountValidateServiceServer will
// result in compilation errors.
type UnsafeAccountValidateServiceServer interface {
	mustEmbedUnimplementedAccountValidateServiceServer()
}

func RegisterAccountValidateServiceServer(s grpc.ServiceRegistrar, srv AccountValidateServiceServer) {
	s.RegisterService(&AccountValidateService_ServiceDesc, srv)
}

func _AccountValidateService_AccountValidate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AccountValidateReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountValidateServiceServer).AccountValidate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: AccountValidateService_AccountValidate_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountValidateServiceServer).AccountValidate(ctx, req.(*AccountValidateReq))
	}
	return interceptor(ctx, in, info, handler)
}

// AccountValidateService_ServiceDesc is the grpc.ServiceDesc for AccountValidateService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var AccountValidateService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "account.AccountValidateService",
	HandlerType: (*AccountValidateServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AccountValidate",
			Handler:    _AccountValidateService_AccountValidate_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "account.proto",
}
